# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'DB: add missing releases'
on:
  workflow_dispatch:
    inputs:
      rebuild:
        description: 'Rebuild the database from scratch'
        type: boolean
        required: false
        default: false
  schedule:
    - cron: '0 0 * * *'
permissions: {}
jobs:
  get_missing_releases:
    runs-on: ubuntu-latest
    outputs:
      missing_gcs: ${{ steps.get_missing_releases.outputs.missing_gcs }}
      missing_db: ${{ steps.get_missing_releases.outputs.missing_db }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.DB_GCS_SA_KEY }}'

      - name: Get missing releases
        id: get_missing_releases
        working-directory: .github/scripts
        run: |
          ./db_get_missing_releases.sh ${{ inputs.rebuild && '--rebuild' }}
          echo "missing_gcs=$(cat missing_gcs_releases.txt | jq -Rsc 'split("\n") | map(select(length > 0))')" >> $GITHUB_OUTPUT
          echo "missing_db=$(cat missing_db_releases.txt | jq -Rsc 'split("\n") | map(select(length > 0))')" >> $GITHUB_OUTPUT

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          path: '.github/scripts/*.txt'

  process_release:
    needs: get_missing_releases
    if: ${{ needs.get_missing_releases.outputs.missing_gcs != '[]' }}
    strategy:
      matrix:
        release: ${{ fromJson(needs.get_missing_releases.outputs.missing_gcs) }}
      fail-fast: false
    uses: ./.github/workflows/db-generate-for-release.yml
    secrets: inherit
    with:
      release: kernelctf ${{matrix.release}}

  merge_db:
    runs-on: ubuntu-latest
    needs: [get_missing_releases, process_release]
    if: ${{ always() && needs.get_missing_releases.outputs.missing_db != '[]' }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.DB_GCS_SA_KEY }}'

      - name: Install kxdb_tool prerequisites
        working-directory: kxdb_tool
        run: pip install -r requirements.txt

      - name: Merge DB
        working-directory: .github/scripts
        run: ./db_merge.sh ${{ inputs.rebuild && '--rebuild' }}

  test_new_releases:
    needs: [get_missing_releases, merge_db]
    if: ${{ always() && needs.get_missing_releases.outputs.missing_db != '[]' && !inputs.rebuild }}
    strategy:
      matrix:
        target: ${{ fromJson(needs.get_missing_releases.outputs.missing_db) }}
      fail-fast: false # do not cancel test of other targets
    uses: ./.github/workflows/test-libxdk.yml
    permissions:
      pull-requests: read
    secrets: inherit
    with:
      target: ${{matrix.target}}
